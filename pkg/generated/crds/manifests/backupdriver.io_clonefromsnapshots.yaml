
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (devel)
  creationTimestamp: null
  name: clonefromsnapshots.backupdriver.io
spec:
  group: backupdriver.io
  names:
    kind: CloneFromSnapshot
    listKind: CloneFromSnapshotList
    plural: clonefromsnapshots
    singular: clonefromsnapshot
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: ' CloneFromSnapshot is used to create a new resource (typically a PVC) from a snapshot.  Once the Snapshot''s Phase has  moved to Snapshotted it is valid to create a new resource from the snapshot ID'
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: CloneFromSnapshotSpec specifies an object to be cloned from a snapshot ID.  The Metadata may be overridden, the format of the metadata is object specific.  APIGroup and Kind specify the type of object to create.
          properties:
            apiGroup:
              description: APIGroup of the resource being created
              type: string
            backpRepository:
              description: The backup repository to retrieve the snapshot from.  The namespace the Snapshot/PVC lives in must have access to the repository
              type: string
            cloneCancel:
              description: SnapshotCancel indicates request to cancel ongoing snapshot.  SnapshotCancel can be set at anytime before the snapshot reaches a terminal phase.  If the snapshot has reached a terminal phase
              type: boolean
            kind:
              description: Kind is the type of resource being created
              type: string
            metadata:
              format: byte
              type: string
            snapshotID:
              type: string
          required:
          - apiGroup
          - backpRepository
          - cloneCancel
          - kind
          - snapshotID
          type: object
        status:
          properties:
            message:
              type: string
            phase:
              description: '  ClonePhase represents the lifecycle phase of a Clone.   New - No work yet, next phase is InProgress   InProgress - snapshot being taken   Completed - new object has been created   Failed - end state, clone failed, no new object was created   Canceling - when the Clone flag is set, if the Clone has not already moved into a terminal state, the               status will move to Canceling.  The object that was being created will be removed  Canceled - the Clone was canceled, no new object was created'
              type: string
            resourceHandle:
              description: The handle of the resource that was cloned from the snapshot
              properties:
                apiGroup:
                  description: APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
                  type: string
                kind:
                  description: Kind is the type of resource being referenced
                  type: string
                name:
                  description: Name is the name of resource being referenced
                  type: string
              required:
              - kind
              - name
              type: object
          required:
          - message
          - phase
          type: object
      required:
      - spec
      - status
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
